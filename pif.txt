function [13, -1]
isPrime 0
isPrime [0, 0]
( [4, -1]
n 1
n [0, 1]
) [5, -1]
: [15, -1]
boolean [14, -1]
{ [6, -1]
if [26, -1]
n [0, 1]
<= [16, -1]
1 2
1 [1, 2]
then [19, -1]
: [15, -1]
{ [6, -1]
return [22, -1]
False [20, -1]
; [7, -1]
} [11, -1]
for [27, -1]
integer [2, -1]
i 3
i [0, 3]
= [8, -1]
2 4
2 [1, 4]
to [28, -1]
n [0, 1]
then [19, -1]
: [15, -1]
{ [6, -1]
if [26, -1]
n [0, 1]
% [17, -1]
i [0, 3]
== [18, -1]
0 5
0 [1, 5]
then [19, -1]
: [15, -1]
{ [6, -1]
return [22, -1]
False [20, -1]
; [7, -1]
} [11, -1]
} [11, -1]
return [22, -1]
True [21, -1]
; [7, -1]
} [11, -1]
function [13, -1]
printPrime 6
printPrime [0, 6]
( [4, -1]
n [0, 1]
) [5, -1]
: [15, -1]
string [12, -1]
{ [6, -1]
for [27, -1]
integer [2, -1]
i [0, 3]
= [8, -1]
2 [1, 4]
to [28, -1]
n [0, 1]
+ [9, -1]
1 [1, 2]
then [19, -1]
: [15, -1]
{ [6, -1]
if [26, -1]
isPrime [0, 0]
( [4, -1]
i [0, 3]
) [5, -1]
then [19, -1]
: [15, -1]
{ [6, -1]
displayoutput [29, -1]
( [4, -1]
i [0, 3]
, [23, -1]
" 7
" [1, 7]
" [1, 7]
) [5, -1]
; [7, -1]
} [11, -1]
} [11, -1]
} [11, -1]
program [30, -1]
: [15, -1]
{ [6, -1]
var [25, -1]
n [0, 1]
: [15, -1]
integer [2, -1]
; [7, -1]
getinput [24, -1]
: [15, -1]
n [0, 1]
; [7, -1]
printPrime [0, 6]
( [4, -1]
n [0, 1]
) [5, -1]
; [7, -1]
} [11, -1]
